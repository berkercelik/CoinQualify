// <auto-generated />
using System;
using CoinQualify.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoinQualify.Migrations
{
    [DbContext(typeof(CqContext))]
    [Migration("20211227232820_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoinQualify.Models.Coin", b =>
                {
                    b.Property<int>("Coin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Coin_mcap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Coin_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Coin_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Coin_rank")
                        .HasColumnType("int");

                    b.Property<decimal>("Coin_supply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Coin_symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Coin_time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Coin_volume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Coin_id");

                    b.HasIndex("User_id");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("CoinQualify.Models.Notification", b =>
                {
                    b.Property<int>("Notify_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Coin_id")
                        .HasColumnType("int");

                    b.Property<bool>("Notify_dir")
                        .HasColumnType("bit");

                    b.Property<int>("Notify_name")
                        .HasColumnType("int");

                    b.Property<decimal>("Notify_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Notify_id");

                    b.HasIndex("Coin_id");

                    b.HasIndex("User_id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("CoinQualify.Models.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("User_deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User_mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("User_profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User_pw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("User_realize")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("User_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CoinQualify.Models.Coin", b =>
                {
                    b.HasOne("CoinQualify.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoinQualify.Models.Notification", b =>
                {
                    b.HasOne("CoinQualify.Models.Coin", "Coin")
                        .WithMany()
                        .HasForeignKey("Coin_id");

                    b.HasOne("CoinQualify.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id");

                    b.Navigation("Coin");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
